version: "2"

services:
  mariadb:
    container_name: projectname_db
    image: wodby/mariadb:10.1-2.1.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: drupal
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
# Improved performance: check https://dba.stackexchange.com/questions/83125/mysql-any-way-to-import-a-huge-32-gb-sql-dump-faster
      MYSQL_INNODB_BUFFER_POOL_SIZE: 2G
      MYSQL_INNODB_LOG_BUFFER_SIZE: 256M
      MYSQL_INNODB_LOG_FILE_SIZE: 1G
      MYSQL_INNODB_WRITE_IO_THREADS: 16
      MYSQL_INNODB_FLUSH_LOG_AT_TRX_COMMIT: 0
#    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci # The simple way to override the mariadb config.
    volumes:
      - ../mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
      - ../storage:/var/lib/mysql # I want to manage volumes manually.
#      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
#      - /path/to/mariadb/data/on/host:/var/lib/mysql # I want to manage volumes manually.

  php:
    container_name: projectname_php
# 1. Images with vanilla Drupal – wodby/drupal:[DRUPAL_VERSION]-[PHP_VERSION]-[STABILITY_TAG].
#    image: wodby/drupal:8-7.1-2.1.0
#    image: wodby/drupal:8-7.0-2.1.0
#    image: wodby/drupal:7-7.1-2.1.0
#    image: wodby/drupal:7-7.0-2.1.0
#    image: wodby/drupal:7-5.6-2.1.0
#    image: wodby/drupal:6-5.6-2.1.0
#    image: wodby/drupal:6-5.3-2.1.0
# 2. Images without Drupal – wodby/drupal-php:[PHP_VERSION]-[STABILITY_TAG].
    image: wodby/drupal-php:7.1-2.1.0
#    image: wodby/drupal-php:7.0-2.1.0
#    image: wodby/drupal-php:5.6-2.1.0
#    image: wodby/drupal-php:5.3-2.1.0
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      PHP_FPM_CLEAR_ENV: "no"
      PHP_XDEBUG: 1
      PHP_XDEBUG_DEFAULT_ENABLE: 1
      PHP_XDEBUG_REMOTE_AUTOSTART: 1
      DB_HOST: projectname_db
      DB_USER: drupal
      DB_PASSWORD: drupal
      DB_NAME: drupal
      DB_DRIVER: mysql
      # PHP_XDEBUG_REMOTE_CONNECT_BACK: 0         # This is needed to respect remote.host setting bellow
      # PHP_XDEBUG_REMOTE_HOST: "10.254.254.254"  # You will also need to 'sudo ifconfig lo0 alias 10.254.254.254'
    volumes:
      - ../:/var/www
#      - docker-sync-unison:/var/www/html # Docker-sync for macOS users

  apache2:
    container_name: projectname_apache2
    image: webdevops/apache-dev:latest
    environment:
      WEB_PHP_SOCKET: projectname_php:9000
      WEB_DOCUMENT_ROOT: /var/www/html
    depends_on:
      - php
    volumes:
      - ../:/var/www
    labels:
      - 'traefik.backend=projectname_apache2'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=HostRegexp:projectname.apache.localhost, {subdomain:[^.]+}.projectname.apache.localhost'
    
  nginx:
    container_name: projectname_nginx
# wodby/drupal-nginx:[DRUPAL_VERSION]-[NGINX_VERSION]-[STABILITY_TAG].
    image: wodby/drupal-nginx:8-1.10-2.1.0
#    image: wodby/drupal-nginx:7-1.10-2.1.0
#    image: wodby/drupal-nginx:6-1.10-2.1.0
    depends_on:
      - php
    environment:
      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html
    volumes:
      - ../:/var/www
#      - docker-sync-unison:/var/www/html # Docker-sync for macOS users
    labels:
      - 'traefik.backend=projectname_nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=HostRegexp:projectname.localhost, {subdomain:[^.]+}.projectname.localhost'

#  varnish:
#    container_name: projectname_varnish
#    image: wodby/drupal-varnish:4.1-2.1.0
#    depends_on:
#      - nginx
#    environment:
#      VARNISH_SECRET: secret
#      VARNISH_BACKEND_HOST: projectname_nginx
#      VARNISH_BACKEND_PORT: 80
#    labels:
#      - 'traefik.backend=projectname_varnish'
#      - 'traefik.port=6081'
#      - 'traefik.frontend.rule=Host:projectname.varnish.localhost, {subdomain:[^.]+}.projectname.varnish.localhost'

#  redis:
#    container_name: projectname_redis
#    image: wodby/redis:3.2-2.1.0

  pma:
    container_name: projectname_pma  
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: projectname_db
      PMA_USER: drupal
      PMA_PASSWORD: drupal
      PHP_UPLOAD_MAX_FILESIZE: 1G
      PHP_MAX_INPUT_VARS: 1G
    labels:
      - 'traefik.backend=projectname_pma'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:projectname.pma.localhost'

#  solr:
#    container_name: projectname_solr  
## wodby/drupal-solr:[DRUPAL_VERSION]-[SOLR_VERSION]-[STABILITY_TAG].
#    image: wodby/drupal-solr:8-6.4-2.0.0
##    image: wodby/drupal-solr:8-6.3-2.0.0
##    image: wodby/drupal-solr:8-5.5-2.0.0
##    image: wodby/drupal-solr:7-6.4-2.0.0
##    image: wodby/drupal-solr:7-6.3-2.0.0
##    image: wodby/drupal-solr:7-5.5-2.0.0
#    environment:
#      SOLR_HEAP: 1024m
#    labels:
#      - 'traefik.backend=projectname_solr'
#      - 'traefik.port=8983'
#      - 'traefik.frontend.rule=Host:projectname.solr.localhost'

  mailhog:
    container_name: projectname_mailhog
    image: mailhog/mailhog
    labels:
      - 'traefik.backend=projectname_mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:projectname.mailhog.localhost'

#  node:
#    container_name: projectname_node
#    image: node:7-alpine
#    working_dir: /app
#    labels:
#      - 'traefik.backend=projectname_node'
#      - 'traefik.port=3000'
#      - 'traefik.frontend.rule=Host:projectname.front.localhost, {subdomain:[^.]+}.projectname.front.localhost'
#    expose:
#      - "3000"
#    volumes:
#      - ./path/to/your/single-page-app:/app
#    command: sh -c 'npm install && npm run start'

#  memcached:
#    container_name: projectname_memcached  
#    image: wodby/memcached:1.4-2.0.0

  traefik:
    image: traefik
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - '8000:80'
      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

# Docker-sync for macOS users
#volumes:
#  docker-sync-unison:
#    external: true
